{"body":"\n\n\n## Countdown - Snippet 17\n\nAnother parsing snippet, today in Ada!\n\n**Snippet**\n\n![CRCRC-17](/images/articles/CRCRC-17.png)\n\n**Snippet in text**\n\n```pascal\nwith Ada.Text_IO; use Ada.Text_IO;\npackage body Scanner is\n\n   C : Character := ' ';\n\n   procedure Get_Next_Token is\n      T : Token renames Current_Token;\n   begin\n      while Is_Whitespace (C) loop\n         Next_C;\n      end loop;\n      if Is_Operator (C) then\n         T.Id := Token_Id (C);\n         Next_C;\n      elsif Is_Digit (C) then\n         T.ID := 'N';\n         T.Intval := 0;\n         loop\n            T.Intval := T.Intval * 10 + (Character'Pos (C) - Character'Pos ('0'));\n            Next_C;\n            exit when not Is_Digit (C);\n         end loop;\n      elsif At_End then\n         T.ID := Eol_Token;\n         C := ' ';\n      else\n         T.Id := Err_Token;\n         Next_C;\n      end if;\n   exception\n      when Constraint_Error =>\n         T.Id := Err_Token;\n         Next_C;\n   end Get_Next_Token;\n\nend Scanner\n```\n\n**Question**\n\nGive an example of a string for which this code finishes without producing an error token.\n\n## Submission\n\nSubmit your answer in our [form](https://forms.gle/241ak21gMu1fRada6).\n","staticData":{}}